## 不要纠结于工具，语言特性远远比这个重要

这个其实很好理解，要想尽快学习一门编程语言，最好的方法是不断的练习，实现某个项目，掌握其语言特性，而非花费大量时间在ide的学习上，除非这种ide是唯一的，或是不可替代的。
## 做比较，找异性和共性

对于编程语言来讲，我们学习的过程是不断深化认识语言特性的过程，虽然不应该把大量时间放到语言特性的学习上。
    
实际上，语言特性的重要性远远小于数据结构和算法。但是我不应该忽略的是，语言特性本身是和数据结构以及算法结合产生的，后者的抽象层次较高，一味的学习高层次的知识不符合我们的认知规律。
    
对于学习多种语言时，最好的途径应该是做比较。共性大多是高层次的，例如对某个数据结构的实现是大致相同的，异性是低层次的，例如对具体的语法和语义，不同语言采用不同的符号实现。这就表明，同样的逻辑，实现不同，在共性中深化数据结构的认识


