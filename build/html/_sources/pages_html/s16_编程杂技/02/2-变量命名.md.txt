# 变量命名规范
## 一、匈牙利命名法
    在变量名之前加上相应的小写字母的符号标识作为前缀，标识出变量的作用域、类型等。
    这些符号可以多个同时使用，顺序是先成员变量，再指针，再简单数据类型，再其他，例如：m_lpszStr，表示指向一个以0字符结尾的字符串的长指针成员变量



    前缀              类型
     a              数组 (Array)
     b              布尔值 (Boolean)
     by             字节 (Byte)
     c              有符号字符 (Char)
     cb             无符号字符 (Char Byte，没有多少人用)
     cr             颜色参考值 (ColorRef)
     cx,cy          坐标差（长度 ShortInt）
     dw             Double Word
     fn             函数
     h              Handle（句柄）
     i              整型
     l              长整型 (Long Int)
     lp             Long Pointer
     m_             类的成员
     n              短整型 (Short Int)
     np             Near Pointer
     p              Pointer
     s              字符串型
     sz             以null做结尾的字符串型 (String with Zero End)
     w              Word


## 二、驼峰式  
    驼峰式命名法就是当变量名或函式名是由一个或多个单词连结在一起，而构成的唯一识别字时，第一个单词以小写字母开始；第二个单词的首字母大写或每一个单词的首字母都采用大写字母，例如：myFirstName、myLastName，这样的变量名看上去就像驼峰峰一样此起彼伏，故得名。 
    驼峰式命名法（Camel-Case）一词来自 Perl 语言中普遍使用的大小写混合格式，而 Larry Wall 等人所著的畅销书《Programming Perl》（O’Reilly 出版）的封面图片正是一匹骆驼。 
    驼峰式命名法的命名规则可视为一种惯例，并无绝对与强制，为的是增加识别和可读性。 
### 小驼峰法 
    变量一般用小驼峰法标识。驼峰法的意思是：除第一个单词之外，其他单词首字母大写。譬如 
    int myStudentCount; 
    变量myStudentCount第一个单词是全部小写，后面的单词首字母大写。 
### 大驼峰法 
    相比小驼峰法，大驼峰法把第一个单词的首字母也大写了。常用于类名，函数名，属性，命名空间。譬如 
    public class DataBaseUser; 


## 三、 帕斯卡命名法 
    帕斯卡命名法其实就是目前说的大驼峰命名法，常用于类名，函数名，属性，命名空间。
    
## 四、 下划线命名法
    对于历史悠久的下划线命名法（my_variable）和驼峰命名法（myVariable）我们认为选择哪种并不重要，只要你坚持在项目中贯彻它。
    
    在本书中，我们将采用驼峰命名法，因为它是 JavaScript 中的惯例（毕竟它叫 JavaScript 而不是 java_script 呀！）。
    
    对此唯一的例外是，对文件的命名，我们将采用下划线命名法（my_file.js）。对于 CSS 类，我们将使用连字号（.my-class）。这样做的原因是在文件系统中，下划线命名法最常见，而
     CSS 语法本身就使用连字号作为连接（比如 font-family，text-align等）。

